\relax 
\citation{howison2011scientific,hannay2009scientists}
\citation{hannay2009scientists}
\citation{segal2007some}
\citation{nguyen2010survey}
\citation{4222616,basili2008understanding}
\citation{basili2008understanding}
\citation{opencl11}
\citation{activelibraries}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\citation{cordy1992hints}
\citation{oliphant2007python}
\@writefile{lol}{\contentsline {lstlisting}{hello.py}{2}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {1}{\ignorespaces \texttt  {[hello.py]} A basic Ace program demonstrating the two-phase structure of Ace programs and libraries.}}{2}}
\newlabel{hello}{{1}{2}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {2}{\ignorespaces Compiling \texttt  {hello.py} using the \texttt  {acec} compiler.}}{2}}
\newlabel{helloout}{{2}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Language Design and Usage}{2}}
\newlabel{usage}{{2}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Static Typing and Syntax}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Phase Separation}{2}}
\@writefile{lol}{\contentsline {lstlisting}{listing3.py}{3}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {3}{\ignorespaces [\texttt  {listing3\hbox {}.py}] A generic data-parallel higher-order map function written using the OpenCL user module.}}{3}}
\newlabel{map}{{3}{3}}
\@writefile{lol}{\contentsline {lstlisting}{listing4.py}{3}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {4}{\ignorespaces [\texttt  {listing4\hbox {}.py}] The generic \texttt  {map} function compiled to map the \texttt  {add5} function over two types of input.}}{3}}
\newlabel{mapadd5dbl}{{4}{3}}
\@writefile{lol}{\contentsline {lstlisting}{listing5.cl}{3}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {5}{\ignorespaces [\texttt  {listing4\hbox {}.cl}] The OpenCL code generated by running \texttt  {acec listing4\hbox {}.py}.}}{3}}
\newlabel{mapout}{{5}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Programmatic Compilation}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Example 2: Higher-Order Map}{3}}
\citation{opencl11}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5}Types as Metalanguage Objects}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.6}Type Propagation}{4}}
\@writefile{lol}{\contentsline {lstlisting}{listing6.py}{4}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {6}{\ignorespaces \texttt  {[listing6.py]} A function demonstrating whole-function type inference when multiple values with differing types are assigned to a single identifier, \texttt  {y}.}}{4}}
\newlabel{inference}{{6}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.7}Whole-Function Type Inference}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Extensibility}{4}}
\newlabel{att}{{3}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Monolithic vs. Extensible Languages}{4}}
\citation{marceau2011measuring}
\@writefile{lol}{\contentsline {lstlisting}{listing9.py}{5}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {7}{\ignorespaces \texttt  {[ace.OpenCL]} A portion of the implementation of OpenCL pointer types implementing subscripting logic using the Ace extension mechanism, AT\&T.}}{5}}
\newlabel{pointers}{{7}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Active Typechecking and Translation}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.1}Active Typechecking}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.2}Dispatch Protocol}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.3}Active Translation}{5}}
\citation{cave2010comparing}
\citation{upc}
\citation{chapel}
\citation{bonachea2002gasnet}
\citation{kale1993charm++}
\citation{kale2009charm++}
\citation{catanzaro2011copperhead}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.4}User-Defined Backends}{6}}
\newlabel{backends}{{3.2.4}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.5}Composability and Interoperability}{6}}
\newlabel{safety}{{3.2.5}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Use Cases}{6}}
\newlabel{usecases}{{3.3}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.3.1}Parallel Programming}{6}}
\@writefile{toc}{\contentsline {paragraph}{OpenCL}{6}}
\@writefile{toc}{\contentsline {subparagraph}{Annotation and Extension Inference}{6}}
\@writefile{toc}{\contentsline {paragraph}{Partitioned Global Address Spaces}{6}}
\@writefile{toc}{\contentsline {paragraph}{Object Models and Message Passing}{6}}
\@writefile{toc}{\contentsline {paragraph}{Functional Parallelism}{6}}
\citation{yang2010gpgpu}
\citation{yang2010gpgpu}
\citation{conf/cefp/Kennedy09}
\citation{sanner1999python}
\citation{klockner2011pycuda}
\citation{klockner2011pycuda}
\citation{klockner2011pycuda}
\citation{klockner2011pycuda}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.3.2}Other Use Cases in HPC}{7}}
\@writefile{toc}{\contentsline {paragraph}{Interoperability Layers}{7}}
\@writefile{toc}{\contentsline {paragraph}{Specialized Optimizations}{7}}
\@writefile{toc}{\contentsline {paragraph}{Domain-Specific Type Systems}{7}}
\@writefile{toc}{\contentsline {paragraph}{Instrumentation}{7}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Ace: a Compilation Environment}{7}}
\newlabel{compenv}{{4}{7}}
\newlabel{backend}{{4}{7}}
\@writefile{lol}{\contentsline {lstlisting}{listing8.py}{7}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {8}{\ignorespaces [\texttt  {listing8\hbox {}.py}] A full OpenCL program using the \texttt  {Ace.OpenCL} Python bindings, including data transfer to and from a device and direct invocation of a generic function, \texttt  {map}, as a kernel without explicit compilation.}}{7}}
\newlabel{py}{{8}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Metaprogramming in Ace}{7}}
\citation{activelibraries}
\citation{veldhuizen2000blitz++}
\citation{malayeri2009structural}
\citation{vanWijngaarden:Mailloux:Peck:Koster:Sintzoff:Lindsey:Meertens:Fisker:acta:1975}
\citation{Kiczales91}
\citation{mccarthy1978history}
\citation{Sheard:1999:UMS}
\citation{fowler2010domain}
\citation{erdweg2011sugarj}
\@writefile{lol}{\contentsline {lstlisting}{listing7.py}{8}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {9}{\ignorespaces [\texttt  {listing9.py}] Metaprogramming with Ace, showing how to construct generic functions from both strings and abstract syntax trees, and how to manipulate syntax trees at compile-time.}}{8}}
\newlabel{metaprogramming}{{9}{8}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Related Work}{8}}
\newlabel{related}{{5}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Active Libraries}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}Structural Polymorphism}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3}Run-Time Indirection}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.4}Term Rewriting Systems}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.5}Language Frameworks and \\Extensible Compilers}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.6}Extensible Languages}{8}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Conclusion}{8}}
\bibstyle{abbrvnat}
\bibdata{../research}
\bibcite{basili2008understanding}{{1}{2008}{{Basili et~al.}}{{Basili, Carver, Cruzes, Hochstein, Hollingsworth, Shull, and Zelkowitz}}}
\bibcite{bonachea2002gasnet}{{2}{2002}{{Bonachea}}{{}}}
\bibcite{upc}{{3}{1999}{{Carlson et~al.}}{{Carlson, Draper, Culler, Yelick, Brooks, and Warren}}}
\bibcite{4222616}{{4}{2007}{{Carver et~al.}}{{Carver, Kendall, Squires, and Post}}}
\bibcite{catanzaro2011copperhead}{{5}{2011}{{Catanzaro et~al.}}{{Catanzaro, Garland, and Keutzer}}}
\bibcite{cave2010comparing}{{6}{2010}{{Cav{\'e} et~al.}}{{Cav{\'e}, Budimli{\'c}, and Sarkar}}}
\bibcite{chapel}{{7}{2007}{{Chamberlain et~al.}}{{Chamberlain, Callahan, and Zima}}}
\bibcite{cordy1992hints}{{8}{1992}{{Cordy}}{{}}}
\bibcite{erdweg2011sugarj}{{9}{2011}{{Erdweg et~al.}}{{Erdweg, Rendel, K{\"a}stner, and Ostermann}}}
\bibcite{fowler2010domain}{{10}{2010}{{Fowler and Parsons}}{{}}}
\bibcite{opencl11}{{11}{}{{Group et~al.}}{{}}}
\bibcite{hannay2009scientists}{{12}{2009}{{Hannay et~al.}}{{Hannay, MacLeod, Singer, Langtangen, Pfahl, and Wilson}}}
\bibcite{howison2011scientific}{{13}{2011}{{Howison and Herbsleb}}{{}}}
\bibcite{kale1993charm++}{{14}{1993}{{Kale and Krishnan}}{{}}}
\bibcite{kale2009charm++}{{15}{2009}{{Kale and Zheng}}{{}}}
\bibcite{conf/cefp/Kennedy09}{{16}{2009}{{Kennedy}}{{}}}
\bibcite{Kiczales91}{{17}{1991}{{Kiczales et~al.}}{{Kiczales, des Rivi\`{e}res, and Bobrow}}}
\bibcite{klockner2011pycuda}{{18}{2011}{{Kl{\"o}ckner et~al.}}{{Kl{\"o}ckner, Pinto, Lee, Catanzaro, Ivanov, and Fasih}}}
\bibcite{malayeri2009structural}{{19}{2009}{{Malayeri and Aldrich}}{{}}}
\bibcite{marceau2011measuring}{{20}{2011}{{Marceau et~al.}}{{Marceau, Fisler, and Krishnamurthi}}}
\bibcite{mccarthy1978history}{{21}{1978}{{McCarthy}}{{}}}
\bibcite{nguyen2010survey}{{22}{2010}{{Nguyen-Hoan et~al.}}{{Nguyen-Hoan, Flint, and Sankaranarayana}}}
\bibcite{oliphant2007python}{{23}{2007}{{Oliphant}}{{}}}
\bibcite{sanner1999python}{{24}{1999}{{Sanner et~al.}}{{}}}
\bibcite{segal2007some}{{25}{2007}{{Segal}}{{}}}
\bibcite{Sheard:1999:UMS}{{26}{1999}{{Sheard}}{{}}}
\bibcite{vanWijngaarden:Mailloux:Peck:Koster:Sintzoff:Lindsey:Meertens:Fisker:acta:1975}{{27}{1975}{{van Wijngaarden et~al.}}{{van Wijngaarden, Mailloux, Peck, Koster, Sintzoff, Lindsey, Meertens, and Fisker}}}
\bibcite{veldhuizen2000blitz++}{{28}{2000}{{Veldhuizen}}{{}}}
\bibcite{activelibraries}{{29}{1998}{{Veldhuizen and Gannon}}{{}}}
\bibcite{yang2010gpgpu}{{30}{2010}{{Yang et~al.}}{{Yang, Xiang, Kong, and Zhou}}}
\newlabel{sigplanconf@finalpage}{{6}{9}}
