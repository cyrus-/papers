\relax 
\citation{Meyerovich:2013:EAP:2509136.2509515,chen05,nguyen2010survey}
\citation{language-oriented}
\citation{cave2010comparing}
\citation{Meyerovich:2012:SDR:2414721.2414724,Meyerovich:2013:EAP:2509136.2509515}
\citation{sugarj}
\citation{Politz:2013:PFM:2509136.2509536,python}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\newlabel{intro}{{1}{1}}
\citation{TIL}
\citation{tlc}
\citation{nfulton-thesis}
\@writefile{toc}{\contentsline {section}{\numberline {2}Language Design and Usage}{2}}
\newlabel{usage}{{2}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Types}{2}}
\citation{self}
\citation{PEPwhatever}
\@writefile{lop}{\contentsline {codelisting}{\numberline {1}{\ignorespaces [\texttt  {listing1\hbox {}.py}] An Ace compilation script.}}{3}}
\newlabel{example}{{1}{3}}
\@writefile{tdo}{\contentsline {todo}{what is the right term for this?}{3}}
\pgfsyspdfmark {pgfid1}{18249337}{17132429}
\pgfsyspdfmark {pgfid2}{2225110}{17130136}
\pgfsyspdfmark {pgfid3}{3388373}{16911246}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Functions}{3}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {2}{\ignorespaces Compiling \texttt  {listing1\hbox {}.py} using \texttt  {acec}. Both steps can be performed at once by writing \lstinline [style=Bash]{`ace listing1.py`} (line 3 will not be printed with this command).}}{3}}
\newlabel{external-compilation}{{2}{3}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {3}{\ignorespaces [\texttt  {\_listing1\hbox {}.py}] The file generated in Listing 2\hbox {}.}}{3}}
\newlabel{example-out}{{3}{3}}
\@writefile{tdo}{\contentsline {todo}{when?}{3}}
\pgfsyspdfmark {pgfid6}{33160621}{19973096}
\pgfsyspdfmark {pgfid9}{37876694}{19970803}
\pgfsyspdfmark {pgfid10}{39039957}{19751913}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Introductory Forms}{3}}
\citation{LovasPfenning08}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Bidirectional Typechecking}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5}Compilation}{4}}
\newlabel{compilation}{{2.5}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.6}B}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Active Type Synthesis and Translation}{4}}
\newlabel{att}{{3}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Active Types}{4}}
\newlabel{atypes}{{3.1}{4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.1}Dispatch Protocol}{4}}
\@writefile{lol}{\contentsline {lstlisting}{listing9.py}{4}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {4}{\ignorespaces \texttt  {[}in \texttt  {examples/clx.py]} The active type family \texttt  {Ptr} implements the semantics of OpenCL pointer types.}}{4}}
\newlabel{cplx}{{4}{4}}
\citation{python}
\citation{marceau2011measuring}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.2}Typechecking}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.3}Translation}{5}}
\citation{opencl11}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Active Bases}{6}}
\newlabel{abases}{{3.2}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Active Targets and Cross-Compilation}{6}}
\newlabel{atargets}{{3.3}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}Compositional Reasoning}{6}}
\newlabel{safety}{{3.4}{6}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Theoretical Foundations}{6}}
\newlabel{theory}{{4}{6}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Generic Functions, Targets and Interactive Execution}{6}}
\newlabel{targets}{{5}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}OpenCL as an Active Library}{6}}
\citation{python}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}Generic Functions}{7}}
\newlabel{genfn}{{5.2}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3}Metaprogramming in Ace}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.4}Concrete Functions and Explicit Compilation}{7}}
\@writefile{lol}{\contentsline {lstlisting}{listing4.py}{7}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {5}{\ignorespaces [\texttt  {listing5\hbox {}.py}] The generic \texttt  {map} function compiled to map the \texttt  {negate} function over two types of input.}}{7}}
\newlabel{compscript}{{5}{7}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {6}{\ignorespaces Compiling \texttt  {listing5\hbox {}.py} using the \texttt  {acec} compiler.}}{7}}
\newlabel{mapc}{{6}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.5}Types}{7}}
\citation{opencl11}
\@writefile{lol}{\contentsline {lstlisting}{listing5.cl}{8}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {7}{\ignorespaces [\texttt  {listing5\hbox {}.cl}] The OpenCL file generated by Listing 6\hbox {}.}}{8}}
\newlabel{mapout}{{7}{8}}
\citation{sanner1999python,nguyen2010survey}
\citation{klockner2011pycuda}
\citation{opencl11}
\citation{klockner2011pycuda}
\citation{klockner2011pycuda}
\@writefile{lol}{\contentsline {lstlisting}{listing8.py}{9}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {8}{\ignorespaces [\texttt  {listing8\hbox {}.py}] A full OpenCL program using the \texttt  {clx} Python bindings, including data transfer to and from a device and direct invocation of a generic function, \texttt  {map}.}}{9}}
\newlabel{py}{{8}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.6}Implicit Compilation and Interactive Execution}{9}}
\newlabel{compenv}{{5.6}{9}}
\newlabel{backend}{{5.6}{9}}
\newlabel{implicit}{{5.6}{9}}
\citation{pfpl}
\@writefile{toc}{\contentsline {section}{\numberline {6}Related Work}{10}}
\newlabel{related}{{6}{10}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Discussion}{10}}
\newlabel{discussion}{{7}{10}}
\@writefile{toc}{\contentsline {section}{\numberline {8}Extensibility}{10}}
\@writefile{toc}{\contentsline {section}{\numberline {9}Expressiveness}{10}}
\newlabel{examples}{{9}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {9.1}Growing a Statically-Typed Python Inside an Ace}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {9.2}Recursive Labeled Sums}{10}}
\@writefile{lol}{\contentsline {lstlisting}{datatypes\textunderscore t.py}{10}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {9}{\ignorespaces \texttt  {[datatypes\_t.py]} An example using statically-typed functional datatypes.}}{10}}
\newlabel{datatypest}{{9}{10}}
\@writefile{lol}{\contentsline {lstlisting}{datatypes.py}{10}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {10}{\ignorespaces \texttt  {[datatypes.py]} The dynamically-typed Python code generated by running \texttt  {acec datatypes\_t.py}.}}{10}}
\newlabel{datatypes}{{10}{10}}
\citation{catanzaro2011copperhead}
\citation{kale2009charm++}
\citation{kale2009charm++}
\citation{chapel}
\citation{bonachea2002gasnet}
\citation{conf/cefp/Kennedy09}
\citation{erdweg2011sugarj}
\citation{TypedScheme2008}
\citation{activelibraries}
\citation{mbeddr}
\citation{TypedScheme2008}
\citation{mbeddr}
\citation{ScalaMacros2013}
\citation{MorphJ2011}
\citation{OpenJava2000}
\citation{Sheard:1999:UMS}
\citation{Delite2011}
\gdef \LT@i {\LT@entry 
    {2}{88.11894pt}\LT@entry 
    {1}{6.0pt}\LT@entry 
    {2}{159.46893pt}\LT@entry 
    {1}{6.0pt}\LT@entry 
    {1}{39.88963pt}\LT@entry 
    {1}{6.0pt}\LT@entry 
    {1}{50.44931pt}\LT@entry 
    {1}{6.0pt}\LT@entry 
    {1}{59.97948pt}\LT@entry 
    {1}{6.0pt}\LT@entry 
    {1}{68.22932pt}\LT@entry 
    {1}{6.0pt}\LT@entry 
    {1}{53.96954pt}}
\citation{terra}
\citation{rustgpu}
\citation{activelibraries}
\citation{veldhuizen2000blitz++}
\citation{activelibraries}
\citation{mbeddr}
\citation{malayeri2009structural}
\citation{vanWijngaarden:Mailloux:Peck:Koster:Sintzoff:Lindsey:Meertens:Fisker:acta:1975}
\citation{Kiczales91}
\@writefile{lol}{\contentsline {lstlisting}{ooclxfp.py}{11}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {11}{\ignorespaces \texttt  {[ooclxfp.py]} An example combining structs and immutable records using a prototype-based object system, cross-compiled to C99. Uses Python 3 argument annotations.}}{11}}
\newlabel{ooclxfppy}{{11}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {9.5}Distributed Programming}{11}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {9.5.1}Units of Measure}{11}}
\@writefile{toc}{\contentsline {section}{\numberline {10}Related Work}{11}}
\newlabel{related}{{10}{11}}
\@writefile{lol}{\contentsline {lstlisting}{ooclxfp.c}{11}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {12}{\ignorespaces \texttt  {[ooclxfp.c]} The C99 code generated by running \texttt  {acec ooclxfp.py}.}}{11}}
\newlabel{ooclxfpc}{{12}{11}}
\citation{erdweg2013state}
\citation{cordy1992hints}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Comparison to related approaches to language-internal extensibility.}}{12}}
\newlabel{relatedtable}{{1}{12}}
\@writefile{toc}{\contentsline {section}{\numberline {11}Discussion}{12}}
\newlabel{discussion}{{11}{12}}
\citation{scalad}
\bibstyle{abbrv}
\bibdata{../research}
\bibcite{python}{{1}{}{{}}{{}}}
\bibcite{bonachea2002gasnet}{{2}{}{{}}{{}}}
\bibcite{ScalaMacros2013}{{3}{}{{}}{{}}}
\bibcite{catanzaro2011copperhead}{{4}{}{{}}{{}}}
\bibcite{cave2010comparing}{{5}{}{{}}{{}}}
\bibcite{Delite2011}{{6}{}{{}}{{}}}
\bibcite{chapel}{{7}{}{{}}{{}}}
\bibcite{chen05}{{8}{}{{}}{{}}}
\bibcite{cordy1992hints}{{9}{}{{}}{{}}}
\bibcite{terra}{{10}{}{{}}{{}}}
\bibcite{erdweg2011sugarj}{{11}{}{{}}{{}}}
\bibcite{erdweg2013state}{{12}{}{{}}{{}}}
\bibcite{opencl11}{{13}{}{{}}{{}}}
\bibcite{pfpl}{{14}{}{{}}{{}}}
\bibcite{rustgpu}{{15}{}{{}}{{}}}
\bibcite{MorphJ2011}{{16}{}{{}}{{}}}
\bibcite{kale2009charm++}{{17}{}{{}}{{}}}
\bibcite{conf/cefp/Kennedy09}{{18}{}{{}}{{}}}
\bibcite{Kiczales91}{{19}{}{{}}{{}}}
\bibcite{klockner2011pycuda}{{20}{}{{}}{{}}}
\bibcite{malayeri2009structural}{{21}{}{{}}{{}}}
\bibcite{marceau2011measuring}{{22}{}{{}}{{}}}
\bibcite{Meyerovich:2012:SDR:2414721.2414724}{{23}{}{{}}{{}}}
\bibcite{Meyerovich:2013:EAP:2509136.2509515}{{24}{}{{}}{{}}}
\bibcite{nguyen2010survey}{{25}{}{{}}{{}}}
\bibcite{scalad}{{26}{}{{}}{{}}}
\bibcite{Politz:2013:PFM:2509136.2509536}{{27}{}{{}}{{}}}
\bibcite{sanner1999python}{{28}{}{{}}{{}}}
\bibcite{Sheard:1999:UMS}{{29}{}{{}}{{}}}
\bibcite{OpenJava2000}{{30}{}{{}}{{}}}
\bibcite{TypedScheme2008}{{31}{}{{}}{{}}}
\bibcite{vanWijngaarden:Mailloux:Peck:Koster:Sintzoff:Lindsey:Meertens:Fisker:acta:1975}{{32}{}{{}}{{}}}
\bibcite{veldhuizen2000blitz++}{{33}{}{{}}{{}}}
\bibcite{activelibraries}{{34}{}{{}}{{}}}
\bibcite{mbeddr}{{35}{}{{}}{{}}}
\providecommand\NAT@force@numbers{}\NAT@force@numbers
\newlabel{sigplanconf@finalpage}{{11}{14}}
