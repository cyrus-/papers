\relax 
\citation{Meyerovich:2013:EAP:2509136.2509515,chen05,nguyen2010survey}
\citation{journals/stp/Ward94}
\citation{cave2010comparing}
\citation{Meyerovich:2012:SDR:2414721.2414724,Meyerovich:2013:EAP:2509136.2509515}
\citation{erdweg2011sugarj}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\newlabel{intro}{{1}{1}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {1}{\ignorespaces [\texttt  {listing1\hbox {}.py}] An Ace compilation script.}}{2}}
\newlabel{example}{{1}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Language Design and Usage}{2}}
\newlabel{usage}{{2}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Types}{2}}
\citation{fulton-thesis}
\citation{Lie86}
\citation{python}
\citation{pep3107}
\citation{Lovas08abidirectional}
\@writefile{tdo}{\contentsline {todo}{what is the right term for this?}{3}}
\pgfsyspdfmark {pgfid1}{4404183}{32379698}
\pgfsyspdfmark {pgfid2}{2225110}{32377405}
\pgfsyspdfmark {pgfid3}{3388373}{32158515}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Typed Functions}{3}}
\@writefile{tdo}{\contentsline {todo}{when?}{3}}
\pgfsyspdfmark {pgfid6}{15859117}{6296370}
\pgfsyspdfmark {pgfid7}{2225110}{6294077}
\pgfsyspdfmark {pgfid8}{3388373}{6075187}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Bidirectional Typechecking of Introductory Forms}{3}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {2}{\ignorespaces Compiling \texttt  {listing1\hbox {}.py} using \texttt  {acec}. Both steps can be performed at once by writing \lstinline [style=Bash]{`ace listing1.py`} (line 3 will not be printed with this command).}}{4}}
\newlabel{external-compilation}{{2}{4}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {3}{\ignorespaces [\texttt  {\_listing1\hbox {}.py}] The file generated in Listing 2\hbox {}.}}{4}}
\newlabel{example-out}{{3}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}External Compilation}{4}}
\newlabel{compilation}{{2.4}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5}Type Errors}{4}}
\citation{wadler1998expression}
\@writefile{lop}{\contentsline {codelisting}{\numberline {4}{\ignorespaces [\texttt  {listing4\hbox {}.py}] Lines 9-13 each have type errors.}}{5}}
\newlabel{oops}{{4}{5}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {5}{\ignorespaces Compiling \texttt  {listing4\hbox {}.py} using \texttt  {acec} catches the errors statically (compilation stops at first error).}}{5}}
\newlabel{oops-compilation}{{5}{5}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Active Typechecking and Translation}{5}}
\newlabel{att}{{3}{5}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {6}{\ignorespaces [\texttt  {listing6.py}] The example detailed in Sec. 3\hbox {}.}}{5}}
\newlabel{att-example}{{6}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Base Decorators}{5}}
\@writefile{tdo}{\contentsline {todo}{show in appendix?}{5}}
\pgfsyspdfmark {pgfid11}{30597556}{27322987}
\pgfsyspdfmark {pgfid14}{37876694}{27320694}
\pgfsyspdfmark {pgfid15}{39039957}{27101804}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Checking Typed Functions}{5}}
\citation{python}
\@writefile{lop}{\contentsline {codelisting}{\numberline {7}{\ignorespaces A portion of the \texttt  {ace} core showing how a base can be used as a decorator to construct a typed function.}}{6}}
\newlabel{base}{{7}{6}}
\@writefile{tdo}{\contentsline {todo}{briefly mention return type annotations?}{6}}
\pgfsyspdfmark {pgfid16}{12803837}{38103949}
\pgfsyspdfmark {pgfid17}{2225110}{38101656}
\pgfsyspdfmark {pgfid18}{3388373}{37882766}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Bidirectional Typechecking}{6}}
\@writefile{tdo}{\contentsline {todo}{if time, add destructuring assignment to appendix}{6}}
\pgfsyspdfmark {pgfid21}{11063051}{22724281}
\pgfsyspdfmark {pgfid22}{2225110}{22721988}
\pgfsyspdfmark {pgfid23}{3388373}{22503098}
\@writefile{lop}{\contentsline {codelisting}{\numberline {8}{\ignorespaces A portion of the base used in our examples thus far, defined in the \texttt  {examples.py} package.}}{6}}
\newlabel{pybase}{{8}{6}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {9}{\ignorespaces The \texttt  {ace.Context} class delegates typechecking and translation of expressions, depending on their form and sub-terms, to a base, a type or a type constructor.}}{7}}
\newlabel{context}{{9}{7}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {10}{\ignorespaces The \texttt  {examples.fp.record} type constructor.}}{7}}
\newlabel{record}{{10}{7}}
\@writefile{tdo}{\contentsline {todo}{do this based on cplx; change intro}{7}}
\pgfsyspdfmark {pgfid26}{32145481}{15035277}
\pgfsyspdfmark {pgfid29}{37876694}{15032984}
\pgfsyspdfmark {pgfid30}{39039957}{14814094}
\citation{opencl11}
\citation{python}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}Active Translation}{8}}
\@writefile{tdo}{\contentsline {todo}{should we separate them?}{8}}
\pgfsyspdfmark {pgfid31}{8927702}{44438322}
\pgfsyspdfmark {pgfid32}{2225110}{44436029}
\pgfsyspdfmark {pgfid33}{3388373}{44217139}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5}Compositional Reasoning}{8}}
\newlabel{safety}{{3.5}{8}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Theoretical Foundations}{8}}
\newlabel{theory}{{4}{8}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Generic Functions, Targets and Interactive Execution}{8}}
\newlabel{targets}{{5}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}OpenCL as an Active Library}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces ABC}}{8}}
\newlabel{tuple}{{1}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}Generic Functions}{8}}
\newlabel{genfn}{{5.2}{8}}
\citation{opencl11}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces \relax \fontsize  {9}{11}\selectfont  \abovedisplayskip 8.5\p@ plus3\p@ minus4\p@ \abovedisplayshortskip \z@ plus2\p@ \belowdisplayshortskip 4\p@ plus2\p@ minus2\p@ \def \leftmargin \leftmargini \topsep 4\p@ plus2\p@ minus2\p@ \parsep 2\p@ plus\p@ minus\p@ \itemsep \parsep {\leftmargin \leftmargini \topsep 4\p@ plus2\p@ minus2\p@ \parsep 2\p@ plus\p@ minus\p@ \itemsep \parsep }\belowdisplayskip \abovedisplayskip Kinding for type and operator constructors and external terms, and equality kinds (see text). Type-level terms stored in the constructor context are not needed during kinding, indicated using a dash.}}{9}}
\newlabel{kindprog}{{2}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3}Concrete Functions and Explicit Compilation}{9}}
\@writefile{lol}{\contentsline {lstlisting}{listing4.py}{9}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {11}{\ignorespaces [\texttt  {listing11\hbox {}.py}] The generic \texttt  {map} function compiled to map the \texttt  {negate} function over two types of input.}}{9}}
\newlabel{compscript}{{11}{9}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {12}{\ignorespaces Compiling \texttt  {listing11\hbox {}.py} using the \texttt  {acec} compiler.}}{9}}
\newlabel{mapc}{{12}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.4}Types}{9}}
\citation{sanner1999python,nguyen2010survey}
\citation{klockner2011pycuda}
\citation{opencl11}
\citation{klockner2011pycuda}
\@writefile{lol}{\contentsline {lstlisting}{listing5.cl}{10}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {13}{\ignorespaces [\texttt  {listing11\hbox {}.cl}] The OpenCL file generated by Listing 12\hbox {}.}}{10}}
\newlabel{mapout}{{13}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.5}Implicit Compilation and Interactive Execution}{10}}
\newlabel{compenv}{{5.5}{10}}
\newlabel{backend}{{5.5}{10}}
\newlabel{implicit}{{5.5}{10}}
\citation{klockner2011pycuda}
\citation{erdweg2011sugarj}
\citation{TypedScheme2008}
\citation{activelibraries}
\citation{mbeddr}
\citation{TypedScheme2008}
\citation{mbeddr}
\citation{ScalaMacros2013}
\citation{MorphJ2011}
\citation{OpenJava2000}
\citation{Sheard:1999:UMS}
\citation{Delite2011}
\gdef \LT@i {\LT@entry 
    {2}{88.11894pt}\LT@entry 
    {1}{6.0pt}\LT@entry 
    {2}{159.46893pt}\LT@entry 
    {1}{6.0pt}\LT@entry 
    {1}{39.88963pt}\LT@entry 
    {1}{6.0pt}\LT@entry 
    {1}{50.44931pt}\LT@entry 
    {1}{6.0pt}\LT@entry 
    {1}{59.97948pt}\LT@entry 
    {1}{6.0pt}\LT@entry 
    {1}{68.22932pt}\LT@entry 
    {1}{6.0pt}\LT@entry 
    {1}{53.96954pt}}
\citation{terra}
\citation{rustgpu}
\citation{activelibraries}
\citation{veldhuizen2000blitz++}
\citation{activelibraries}
\citation{mbeddr}
\citation{malayeri2009structural}
\citation{vanWijngaarden:Mailloux:Peck:Koster:Sintzoff:Lindsey:Meertens:Fisker:acta:1975}
\citation{Kiczales91}
\citation{erdweg2013state}
\citation{Politz:2013:PFM:2509136.2509536,python}
\@writefile{toc}{\contentsline {section}{\numberline {6}Related Work}{11}}
\newlabel{related}{{6}{11}}
\citation{tarditi+:til-OLD}
\citation{cordy1992hints}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Comparison to related approaches to language-internal extensibility.}}{12}}
\newlabel{relatedtable}{{5}{12}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Discussion}{12}}
\newlabel{discussion}{{7}{12}}
\citation{scalad}
\bibstyle{abbrv}
\bibdata{../research}
\bibcite{pep3107}{{1}{}{{}}{{}}}
\bibcite{python}{{2}{}{{}}{{}}}
\bibcite{bonachea2002gasnet}{{3}{}{{}}{{}}}
\bibcite{ScalaMacros2013}{{4}{}{{}}{{}}}
\bibcite{catanzaro2011copperhead}{{5}{}{{}}{{}}}
\bibcite{cave2010comparing}{{6}{}{{}}{{}}}
\bibcite{Delite2011}{{7}{}{{}}{{}}}
\bibcite{chapel}{{8}{}{{}}{{}}}
\bibcite{chen05}{{9}{}{{}}{{}}}
\bibcite{cordy1992hints}{{10}{}{{}}{{}}}
\bibcite{terra}{{11}{}{{}}{{}}}
\bibcite{erdweg2011sugarj}{{12}{}{{}}{{}}}
\bibcite{erdweg2013state}{{13}{}{{}}{{}}}
\bibcite{fulton-thesis}{{14}{}{{}}{{}}}
\bibcite{opencl11}{{15}{}{{}}{{}}}
\bibcite{pfpl}{{16}{}{{}}{{}}}
\bibcite{rustgpu}{{17}{}{{}}{{}}}
\bibcite{MorphJ2011}{{18}{}{{}}{{}}}
\bibcite{kale2009charm++}{{19}{}{{}}{{}}}
\bibcite{conf/cefp/Kennedy09}{{20}{}{{}}{{}}}
\bibcite{Kiczales91}{{21}{}{{}}{{}}}
\bibcite{klockner2011pycuda}{{22}{}{{}}{{}}}
\bibcite{Lie86}{{23}{}{{}}{{}}}
\bibcite{Lovas08abidirectional}{{24}{}{{}}{{}}}
\bibcite{malayeri2009structural}{{25}{}{{}}{{}}}
\bibcite{marceau2011measuring}{{26}{}{{}}{{}}}
\bibcite{Meyerovich:2012:SDR:2414721.2414724}{{27}{}{{}}{{}}}
\bibcite{Meyerovich:2013:EAP:2509136.2509515}{{28}{}{{}}{{}}}
\bibcite{nguyen2010survey}{{29}{}{{}}{{}}}
\bibcite{scalad}{{30}{}{{}}{{}}}
\bibcite{Politz:2013:PFM:2509136.2509536}{{31}{}{{}}{{}}}
\bibcite{sanner1999python}{{32}{}{{}}{{}}}
\bibcite{Sheard:1999:UMS}{{33}{}{{}}{{}}}
\bibcite{tarditi+:til-OLD}{{34}{}{{}}{{}}}
\bibcite{OpenJava2000}{{35}{}{{}}{{}}}
\bibcite{TypedScheme2008}{{36}{}{{}}{{}}}
\bibcite{vanWijngaarden:Mailloux:Peck:Koster:Sintzoff:Lindsey:Meertens:Fisker:acta:1975}{{37}{}{{}}{{}}}
\bibcite{veldhuizen2000blitz++}{{38}{}{{}}{{}}}
\bibcite{activelibraries}{{39}{}{{}}{{}}}
\bibcite{mbeddr}{{40}{}{{}}{{}}}
\bibcite{wadler1998expression}{{41}{}{{}}{{}}}
\bibcite{journals/stp/Ward94}{{42}{}{{}}{{}}}
\citation{marceau2011measuring}
\@writefile{toc}{\contentsline {section}{\numberline {A}Complex Numbers}{14}}
\@writefile{toc}{\contentsline {section}{\numberline {B}Expressiveness}{15}}
\newlabel{examples}{{B}{15}}
\@writefile{toc}{\contentsline {subsection}{\numberline {B.1}Growing a Statically-Typed Python Inside an Ace}{15}}
\@writefile{lol}{\contentsline {lstlisting}{listing9.py}{16}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {15}{\ignorespaces \texttt  {[}in \texttt  {examples/clx.py]} The active type family \texttt  {Ptr} implements the semantics of OpenCL pointer types.}}{16}}
\newlabel{cplx}{{15}{16}}
\@writefile{toc}{\contentsline {subsection}{\numberline {B.2}Recursive Labeled Sums}{16}}
\@writefile{lol}{\contentsline {lstlisting}{datatypes\textunderscore t.py}{16}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {16}{\ignorespaces \texttt  {[datatypes\_t.py]} An example using statically-typed functional datatypes.}}{16}}
\newlabel{datatypest}{{16}{16}}
\@writefile{lol}{\contentsline {lstlisting}{datatypes.py}{16}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {17}{\ignorespaces \texttt  {[datatypes.py]} The dynamically-typed Python code generated by running \texttt  {acec datatypes\_t.py}.}}{16}}
\newlabel{datatypes}{{17}{16}}
\citation{pfpl}
\citation{catanzaro2011copperhead}
\citation{kale2009charm++}
\citation{kale2009charm++}
\citation{chapel}
\citation{bonachea2002gasnet}
\citation{conf/cefp/Kennedy09}
\providecommand\NAT@force@numbers{}\NAT@force@numbers
\@writefile{toc}{\contentsline {subsection}{\numberline {B.3}Nested Data Parallelism}{17}}
\@writefile{toc}{\contentsline {subsection}{\numberline {B.4}Product Types}{17}}
\@writefile{toc}{\contentsline {subsection}{\numberline {B.5}Distributed Programming}{17}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {B.5.1}Units of Measure}{17}}
\@writefile{toc}{\contentsline {subsection}{\numberline {B.6}OOFPCLX}{17}}
\newlabel{sigplanconf@finalpage}{{B.6}{17}}
\@writefile{lol}{\contentsline {lstlisting}{ooclxfp.py}{18}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {18}{\ignorespaces \texttt  {[ooclxfp.py]} An example combining structs and immutable records using a prototype-based object system, cross-compiled to C99. Uses Python 3 argument annotations.}}{18}}
\newlabel{ooclxfppy}{{18}{18}}
\@writefile{lol}{\contentsline {lstlisting}{ooclxfp.c}{18}}
\@writefile{lop}{\contentsline {codelisting}{\numberline {19}{\ignorespaces \texttt  {[ooclxfp.c]} The C99 code generated by running \texttt  {acec ooclxfp.py}.}}{18}}
\newlabel{ooclxfpc}{{19}{18}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces \relax \fontsize  {9}{11}\selectfont  \abovedisplayskip 8.5\p@ plus3\p@ minus4\p@ \abovedisplayshortskip \z@ plus2\p@ \belowdisplayshortskip 4\p@ plus2\p@ minus2\p@ \def \leftmargin \leftmargini \topsep 4\p@ plus2\p@ minus2\p@ \parsep 2\p@ plus\p@ minus\p@ \itemsep \parsep {\leftmargin \leftmargini \topsep 4\p@ plus2\p@ minus2\p@ \parsep 2\p@ plus\p@ minus\p@ \itemsep \parsep }\belowdisplayskip \abovedisplayskip Kinding for type-level terms. The kinding context $\Delta $ maps type variables to kinds. Checked derivates (introduced by rule \textsc  {k-d-i-checked}, discussed in Sec. \G@refundefinedtrue \text  {\normalfont  \bfseries  ??}\GenericWarning  {               }{LaTeX Warning: Reference `repcon' on page 18 undefined}) should only be constructed by the semantics (this can be enforced by a parser, so we will assume it in the metatheory).}}{18}}
\newlabel{tlkind}{{3}{18}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces \relax \fontsize  {9}{11}\selectfont  \abovedisplayskip 8.5\p@ plus3\p@ minus4\p@ \abovedisplayshortskip \z@ plus2\p@ \belowdisplayshortskip 4\p@ plus2\p@ minus2\p@ \def \leftmargin \leftmargini \topsep 4\p@ plus2\p@ minus2\p@ \parsep 2\p@ plus\p@ minus\p@ \itemsep \parsep {\leftmargin \leftmargini \topsep 4\p@ plus2\p@ minus2\p@ \parsep 2\p@ plus\p@ minus\p@ \itemsep \parsep }\belowdisplayskip \abovedisplayskip The checked active typing judgement. The normalization judgement for type-level terms ($\delimiter "322B37F $) is specified in Fig. \G@refundefinedtrue \text  {\normalfont  \bfseries  ??}\GenericWarning  {               }{LaTeX Warning: Reference `tleval' on page 19 undefined}. Derivate checking is specified in Fig. \G@refundefinedtrue \text  {\normalfont  \bfseries  ??}\GenericWarning  {               }{LaTeX Warning: Reference `ait' on page 19 undefined}. Note that checked derivates can \emph  {only} be constructed by the \textsc  {att-op} rule (we enforce this judgementally in Sec. 4\hbox {}).}}{19}}
\newlabel{absatt}{{4}{19}}
