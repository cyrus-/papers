p11
- elaborated a bit more on why Coq's notation mechanism won't give you conventional regex syntax

p12
- fixed non-referential this
- removed "universally unique" and elaborated on the use of a URI-based naming convention

p13
- changed "impact" to "effect"

p14
- the static language is just a standard total functional language
- clarified that the static function will be applied to an encoding of the character sequence between delimiters, i.e. the body of the delimited form.
- changed "ParseStream" to "Body" to reflect this
- changed "the expansion logic" to "the static function"
- clarified that "spliced subexpressions" are expressions that appear inside a delimited form, e.g. name and ssn in the example on pg. 14.

p16
- changed "satisyfing" to "sealed against"
- $G identifies the TSM, G identifies a module parameter.

p17
- Changed "aliases to a type" to "synonyms of a type"
- If t = (u -> u) * u then t can't have a TSL because it is not fully abstract.
- Added a clarification about why non-termination in the SL would make typechecking undecidable (TSM application occurs as part of typechecking)
- Reading the parsestream isn't effectful, it's just a functional interface to the body of the delimited form (see comments above).
- See comments in email about pattern matching.
- Removed the footnote about undecidability.


