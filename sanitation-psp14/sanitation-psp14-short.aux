\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{OWASP}
\citation{cinderella}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{\thepage }{section.1}}
\newlabel{intro}{{1}{\thepage }{Introduction}{section.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Regular expressions over the alphabet $\Sigma $.}}{\thepage }{figure.1}}
\newlabel{fig:regex}{{1}{\thepage }{Regular expressions over the alphabet $\Sigma $}{figure.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Syntax of $\lambda \@uscore .{RS}$.}}{\thepage }{figure.2}}
\newlabel{fig:lamrs}{{2}{\thepage }{Syntax of $\lambda _{RS}$}{figure.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Regular String Types, Minimally}{\thepage }{section.2}}
\newlabel{calculus}{{2}{\thepage }{Regular String Types, Minimally}{section.2}{}}
\newlabel{fig:lambdas}{{2}{\thepage }{Regular String Types, Minimally}{figure.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Typing rules for our fragment of $\lambda _S$. The typing context $\Psi $ is standard.}}{\thepage }{figure.3}}
\newlabel{fig:etyping}{{3}{\thepage }{Typing rules for our fragment of $\lambdas $. The typing context $\sctx $ is standard}{figure.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Big step semantics for our fragment of $\lambda _S$. Error propagation rules are omitted.}}{\thepage }{figure.4}}
\newlabel{fig:eeval}{{4}{\thepage }{Big step semantics for our fragment of $\lambdas $. Error propagation rules are omitted}{figure.4}{}}
\newlabel{fig:trans}{{2}{\thepage }{Regular String Types, Minimally}{figure.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces Translation from source terms (S) to target terms (P). The translation is type-directed in the Tr-Coerce cases.}}{\thepage }{figure.10}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Syntax for the fragment of our target language, $\lambda _P$, containing strings and statically constructed regular expressions.}}{\thepage }{figure.5}}
\newlabel{fig:lcsSyntax}{{5}{\thepage }{Syntax for the fragment of our target language, $\lambdap $, containing strings and statically constructed regular expressions}{figure.5}{}}
\newlabel{fig:lambdap}{{2}{\thepage }{Regular String Types, Minimally}{figure.10}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Typing rules for our fragment of $\lambda _P$. The typing context $\Theta $ is standard.}}{\thepage }{figure.6}}
\newlabel{fig:ityping}{{6}{\thepage }{Typing rules for our fragment of $\lambdap $. The typing context $\tctx $ is standard}{figure.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Big step semantics for our fragment of $\lambda _P$. Error propagation rules are omitted.}}{\thepage }{figure.7}}
\newlabel{fig:ieval}{{7}{\thepage }{Big step semantics for our fragment of $\lambdap $. Error propagation rules are omitted}{figure.7}{}}
\citation{cinderella}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Properties of Regular Languages}{\thepage }{subsection.2.1}}
\newlabel{thm:regexprops}{{1}{\thepage }{}{thm.1}{}}
\newlabel{thm:total}{{4}{\thepage }{}{thm.4}{}}
\newlabel{thm:substcorrespondence}{{5}{\thepage }{}{thm.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Safety of the Source and Target Languages}{\thepage }{subsection.2.2}}
\newlabel{thm:scorrect}{{8}{\thepage }{}{thm.8}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Regular string types in atlang, a library that enables static type checking for Python. }}{\thepage }{figure.8}}
\newlabel{thm:scorrect}{{9}{\thepage }{}{thm.9}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Translation Correctness}{\thepage }{subsection.2.3}}
\newlabel{thm:tcorrect}{{11}{\thepage }{}{thm.11}{}}
\citation{UrFlowOSDI10}
\citation{HosoyaVouillonPierce2000ICFP}
\citation{HosoyaPierce2002}
\citation{xhaskell}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Implementation of the \texttt  {string\_in} type constructor in atlang.}}{\thepage }{figure.9}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces Output of successful compilation.}}{\thepage }{figure.10}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces Output of failed compilation.}}{\thepage }{figure.11}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Implementation as a Library in {Atlang}}{\thepage }{section.3}}
\newlabel{atlang}{{3}{\thepage }{Implementation as a Library in {Atlang}}{section.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Related Work}{\thepage }{section.4}}
\newlabel{related}{{4}{\thepage }{Related Work}{section.4}{}}
\citation{fulton12}
\citation{fulton13}
\bibstyle{abbrv}
\bibdata{research}
\bibcite{UrFlowOSDI10}{1}
\bibcite{fulton12}{2}
\bibcite{fulton13}{3}
\bibcite{cinderella}{4}
\bibcite{HosoyaPierce2002}{5}
\bibcite{HosoyaVouillonPierce2000ICFP}{6}
\bibcite{OWASP}{7}
\bibcite{xhaskell}{8}
\@writefile{toc}{\contentsline {section}{\numberline {5}Conclusion}{\thepage }{section.5}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Conclusion}{\thepage }{section.6}}
\@writefile{toc}{\contentsline {section}{\numberline {7}References}{\thepage }{section.7}}
